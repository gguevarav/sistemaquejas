{"remainingRequest":"C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\src\\views\\Home.vue","mtime":1632904160983},{"path":"C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dguevara\\proyectos\\danilo\\sistemaquejas\\app_quejas\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}